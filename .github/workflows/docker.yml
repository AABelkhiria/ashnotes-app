name: 'Build and Push Docker Image'

on:
  workflow_dispatch

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get latest Docker image tag from GHCR and increment version
        id: versioning
        run: |
          package="aabelkhiria/tauri-build-env"
          current_date=$(date +'%y.%m')
          echo "Current date (YY.MM): ${current_date}"

          # Get the latest version tag, ignoring "latest". Fallback to "0.0.0" if no tags exist.
          latest_tag=$(skopeo list-tags "docker://ghcr.io/${package}" | jq -r '.Tags[]' | grep -v "latest" | sort -V | tail -n 1 || echo "0.0.0")
          echo "Latest tag found: ${latest_tag}"

          # Extract the date part (YY.MM) from the latest tag
          tag_date=$(echo "$latest_tag" | cut -d. -f1,2)
          echo "Date from latest tag: ${tag_date}"

          # Check if the latest tag is from the current month
          if [ "$tag_date" == "$current_date" ]; then
            # SAME MONTH: Increment the patch number
            echo "Latest tag is from the current month. Incrementing patch number."
            patch_version=$(echo "$latest_tag" | cut -d. -f3)
            new_patch=$((patch_version + 1))
            new_version="${current_date}.${new_patch}"
          else
            # NEW MONTH or FIRST RUN: Reset the patch number to 1
            echo "This is a new month or the first run. Resetting patch number to 1."
            new_version="${current_date}.1"
          fi

          # Output the new version for subsequent steps
          echo "New version determined: ${new_version}"
          echo "new_version=${new_version}" >> $GITHUB_OUTPUT

      - name: Set lowercase repo owner
        id: repo-owner
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./.docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.repo-owner.outputs.owner }}/tauri-build-env:latest
            ghcr.io/${{ steps.repo-owner.outputs.owner }}/tauri-build-env:${{ steps.versioning.outputs.new_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
