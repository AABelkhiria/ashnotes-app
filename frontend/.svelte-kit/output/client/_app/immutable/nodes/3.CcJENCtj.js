import"../chunks/CWj6FrbW.js";import{i as z}from"../chunks/BM7KANXt.js";import{p as W,o as B,y as G,z as I,k as y,n as $,a as K,g as t,m as f,s,q as k,v as N,t as Q,x as V}from"../chunks/D_uOQWZ4.js";import{i as S,s as X,a as C}from"../chunks/CxqE7Zb0.js";import{s as Y,g as U}from"../chunks/DNNZQTWB.js";import{N as Z}from"../chunks/DYa25zTU.js";import{b as A,t as F}from"../chunks/D7ZDF7IB.js";const ee=()=>{const c=Y;return{page:{subscribe:c.page.subscribe},navigating:{subscribe:c.navigating.subscribe},updated:c.updated}},te={subscribe(c){return ee().page.subscribe(c)}};var se=y("<p>Loading note...</p>"),re=y('<div class="error-message svelte-7ionb7"><p class="svelte-7ionb7"> </p></div>'),ae=y('<div class="welcome-message svelte-7ionb7"><h2>Welcome to Notes</h2> <p>Select a note from the list to view or edit it.</p></div>'),oe=y('<div class="note-page svelte-7ionb7"><!></div>');function de(c,M){W(M,!1);const[x,R]=X(),v=()=>C(A,"$backendUrl",x),d=()=>C(te,"$page",x);let u=f(null),i=f(""),h=f(""),a=f(null),m=f(null),_=f(!0),l=f(!1);function j(e){const r=e.split("/"),o=r[r.length-1];return o.includes(".")||o==="README.md"?r.slice(0,-1).join("/"):e}async function D(e){s(_,!0),s(a,null),s(u,null),s(l,!1);try{const r=await fetch(`${v()}/api/notes/${e}`);if(r.status===404){s(u,"");const o=j(e);s(i,`${o}/README.md`),s(l,!0)}else if(r.ok){const o=await r.json();s(u,o.content),e.includes(".")?s(i,e):s(i,`${e}/README.md`)}else throw new Error(`HTTP error! status: ${r.status}`)}catch(r){s(a,`Failed to fetch note content: ${r.message}`),console.error(t(a)),s(u,null)}finally{s(_,!1)}}async function H(e){s(a,null),s(m,null);try{const r=t(l)?`${v()}/api/notes`:`${v()}/api/notes/${t(i)}`,o=t(l)?"POST":"PUT",E=t(l)?JSON.stringify({path:t(i),content:e}):JSON.stringify({content:e}),n=await fetch(r,{method:o,headers:{"Content-Type":"application/json"},body:E});if(!n.ok){const p=await n.text();throw new Error(`HTTP error! status: ${n.status} - ${p}`)}s(m,`Note ${t(l)?"created":"updated"} successfully!`),F(),t(l)&&U(`/notes/${t(i)}`)}catch(r){s(a,`Failed to save note: ${r.message}`),console.error(t(a))}}async function O(){if(confirm(`Are you sure you want to delete ${t(i)}?`)){s(a,null),s(m,null);try{const e=await fetch(`${v()}/api/notes/${t(i)}`,{method:"DELETE"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);s(m,"Note deleted successfully!"),F(),U("/")}catch(e){s(a,`Failed to delete note: ${e.message}`),console.error(t(a))}}}B(()=>A.subscribe(()=>{d().params.path&&D(d().params.path)})),G(()=>(d(),t(h)),()=>{typeof window<"u"&&d().params.path&&d().params.path!==t(h)&&(s(h,d().params.path),D(t(h)))}),I(),z();var w=oe(),J=k(w);{var L=e=>{var r=se();$(e,r)},q=(e,r)=>{{var o=n=>{var p=re(),b=k(p),P=k(b,!0);N(b),N(p),Q(()=>V(P,t(a))),$(n,p)},E=(n,p)=>{{var b=g=>{Z(g,{get notePath(){return t(i)},onSave:H,onDelete:O,get successMessage(){return t(m)},get isCreating(){return t(l)},get content(){return t(u)},set content(T){s(u,T)},$$legacy:!0})},P=g=>{var T=ae();$(g,T)};S(n,g=>{t(u)!==null?g(b):g(P,!1)},p)}};S(e,n=>{t(a)?n(o):n(E,!1)},r)}};S(J,e=>{t(_)?e(L):e(q,!1)})}N(w),$(c,w),K(),R()}export{de as component};
