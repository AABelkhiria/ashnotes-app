import"../chunks/CWj6FrbW.js";import{i as d}from"../chunks/BM7KANXt.js";import{p as m,o as g,h as y,a as E,g as s,m as c,s as e,$}from"../chunks/D_uOQWZ4.js";import{N as w}from"../chunks/DYa25zTU.js";import{t as l}from"../chunks/D7ZDF7IB.js";function D(i,u){m(u,!1);let n=c(""),r=c("README.md"),o=c(null);g(async()=>{await h()});async function h(){try{const t=await fetch(`/api/notes/${s(r)}`);if(t.ok)e(n,await t.text());else if(t.status===404)e(n,"");else throw new Error(`Failed to fetch note: ${t.statusText}`)}catch(t){console.error("Error fetching note content:",t),e(n,`# Error loading note

Could not load the note content.`)}}async function f(t){try{const a=await fetch(`/api/notes/${s(r)}`,{method:"PUT",headers:{"Content-Type":"text/plain"},body:t});if(!a.ok)throw new Error(`HTTP error! status: ${a.status}`);e(o,"Note saved successfully!"),setTimeout(()=>e(o,null),3e3),l()}catch(a){console.error("Error saving note:",a),e(o,"Failed to save note."),setTimeout(()=>e(o,null),3e3)}}function p(){l(),e(n,""),e(r,"README.md"),e(o,"Note deleted successfully!"),setTimeout(()=>e(o,null),3e3)}d(),y(t=>{$.title="Note App"}),w(i,{get notePath(){return s(r)},onSave:f,onDelete:p,get successMessage(){return s(o)},get content(){return s(n)},set content(t){e(n,t)},$$legacy:!0}),E()}export{D as component};
